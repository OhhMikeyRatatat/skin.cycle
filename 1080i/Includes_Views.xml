<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- View Items -->
	<variable name="Art-Fanart">
		<value condition="Container.Content(episodes)">$INFO[ListItem.Thumb]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	<variable name="Star-Rating-Image">
		<value condition="IntegerGreaterThan(ListItem.Rating,9.9)">common/rating/rating5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,8.9)">common/rating/rating4_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,7.9)">common/rating/rating4.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,6.9)">common/rating/rating3_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,5.9)">common/rating/rating3.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,4.9)">common/rating/rating2_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,3.9)">common/rating/rating2.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,2.9)">common/rating/rating1_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,1.9)">common/rating/rating1.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,0.9)">common/rating/rating0_5.png</value>
		<value>common/rating/rating0.png</value>
	</variable>
	<include name="Star-Rating">
		<width>138</width>
		<height>41</height>
		<texture>$VAR[Star-Rating-Image]</texture>
	</include>
	<variable name="WatchedOverlay">
		<value condition="ListItem.IsResumable">inprogress_icon.png</value>
        <value condition="[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">new_icon.png</value>
        <value condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">watched_icon.png</value>
    </variable>
    <include name="WatchedOverlayVisibility">
		<visible>ListItem.IsResumable | [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]] | StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
    </include>
	
	<!-- TODO: Images for back and empty -->
	<variable name="Art-Info-Poster">
		<value condition="!IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value condition="substring(ListItem.Label,..)">-</value>
		<value>-</value>
	</variable>
	
	
	<!-- View Animations -->
	<include name="Common-View-Animation">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" delay="100" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" delay="100"  time="350" tween="cubic" easing="inout" center="960,540"/>
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" delay="100" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" delay="100" time="350" tween="cubic" easing="inout" center="960,540"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" time="250" tween="cubic" easing="inout" center="960,540"/>
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" time="250" tween="cubic" easing="inout" center="960,540"/>
		</animation>
	</include>
</includes>