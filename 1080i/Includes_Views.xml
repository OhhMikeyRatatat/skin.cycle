<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- View Items -->
	<!-- Art -->
	<!-- TODO: Images for back and empty -->
	<variable name="Art-Fanart">
		<value condition="Container.Content(episodes)">$INFO[ListItem.Thumb]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	<variable name="Art-Info-Poster">
		<value condition="!IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value condition="substring(ListItem.Label,..)">-</value>
		<value>-</value>
	</variable>
	
	<!-- Rating -->
	<variable name="Star-Rating-Image">
		<value condition="IntegerGreaterThan(ListItem.Rating,9.9)">common/rating/rating5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,8.9)">common/rating/rating4_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,7.9)">common/rating/rating4.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,6.9)">common/rating/rating3_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,5.9)">common/rating/rating3.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,4.9)">common/rating/rating2_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,3.9)">common/rating/rating2.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,2.9)">common/rating/rating1_5.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,1.9)">common/rating/rating1.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,0.9)">common/rating/rating0_5.png</value>
		<value>common/rating/rating0.png</value>
	</variable>
	<include name="Star-Rating">
		<width>138</width>
		<height>41</height>
		<texture>$VAR[Star-Rating-Image]</texture>
	</include>
	
	<!-- Watched Overlay -->
	<variable name="WatchedOverlay">
		<value condition="ListItem.IsResumable">inprogress_icon.png</value>
        <value condition="[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">new_icon.png</value>
        <value condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">watched_icon.png</value>
    </variable>
    <include name="WatchedOverlayVisibility">
		<visible>ListItem.IsResumable | [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]] | StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
    </include>
	
	<!-- Flags -->
	<variable name="Flag-HDSD">
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,1079)">special://skin/extras/resflags/1080.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">special://skin/extras/resflags/720.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,575)">special://skin/extras/resflags/576.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,539)">special://skin/extras/resflags/540.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">special://skin/extras/resflags/480.png</value>
        <value>special://skin/extras/resflags/defaultscreen.png</value>
    </variable>
	<variable name="Flag-Studio">
        <value condition="!IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio,special://skin/extras/studioflags/,.png]</value>
        <value>special://skin/extras/studioflags/default-studio.png</value>
    </variable>
    <variable name="Flag-VideoCodec">
        <value condition="!IsEmpty(ListItem.VideoCodec)">$INFO[ListItem.VideoCodec,special://skin/extras/videoflags/,.png]</value>
        <value>special://skin/extras/videoflags/default.png</value>
    </variable>
    <variable name="Flag-AudioCodec">
        <value condition="!IsEmpty(ListItem.AudioCodec)">$INFO[ListItem.AudioCodec,special://skin/extras/audioflags/,.png]</value>
    </variable>
    <!--<variable name="Flag-Label">
        <value condition="!IsEmpty(ListItem.Property(Album_Label))">$INFO[ListItem.Property(Album_Label),special://skin/extras/recordlabel/,.png]</value>
        <value>special://skin/extras/studioflags/default-studio.png</value>
    </variable>-->
    <variable name="Flag-MPAA">
		<value condition="substring(listitem.mpaa,TV-Y) + ![substring(listitem.mpaa,TV-Y7) | substring(listitem.mpaa,TV-Y7-FV)]">special://skin/extras/ratingflags/tv-y.png</value>
        <value condition="substring(listitem.mpaa,TV-Y7) | substring(listitem.mpaa,TV-Y7-FV)">special://skin/extras/ratingflags/tv-y7.png</value>
        <value condition="substring(listitem.mpaa,TV-G)">special://skin/extras/ratingflags/TV-G_Certificate_US.png</value>
        <value condition="substring(listitem.mpaa,TV-PG)">special://skin/extras/ratingflags/TV-PG_Certificate_US.png</value>
        <value condition="substring(listitem.mpaa,TV-14)">special://skin/extras/ratingflags/TV-14_Certificate_US.png</value>
        <value condition="substring(listitem.mpaa,TV-MA)">special://skin/extras/ratingflags/TV-MA_Certificate_US.png</value>
    	<value>special://skin/extras/ratingflags/$VAR[MovieMPAAVar].png</value>
    </variable>
    <variable name="MovieMPAAVar">
        <value condition="StringCompare(Skin.String(MovieMPAALang),DE)">$VAR[MovieMPAAVar_DE]</value>
        <value condition="StringCompare(Skin.String(MovieMPAALang),UK)">$VAR[MovieMPAAVar_UK]</value>
        <value>$VAR[MovieMPAAVar_US]</value>
    </variable>
    <variable name="MovieMPAAVar_DE">
        <value condition="SubString(ListItem.MPAA,18) | SubString(Container(100).ListItem.Property(MPAA),18)">de/18</value>
        <value condition="SubString(ListItem.MPAA,16) | SubString(Container(100).ListItem.Property(MPAA),16)">de/16</value>
        <value condition="SubString(ListItem.MPAA,12) | SubString(Container(100).ListItem.Property(MPAA),12)">de/12</value>
        <value condition="SubString(ListItem.MPAA,6) | SubString(Container(100).ListItem.Property(MPAA),6)">de/6</value>
        <value condition="SubString(ListItem.MPAA,0) | SubString(Container(100).ListItem.Property(MPAA),0)">de/0</value>
    </variable>
    <variable name="MovieMPAAVar_UK">
        <value condition="SubString(ListItem.MPAA,PG) | SubString(Container(100).ListItem.Property(MPAA),PG)">uk/pg</value>
        <value condition="SubString(ListItem.MPAA,12A) | SubString(Container(100).ListItem.Property(MPAA),12A)">uk/12a</value>
        <value condition="SubString(ListItem.MPAA,12) | SubString(Container(100).ListItem.Property(MPAA),12)">uk/12</value>
        <value condition="SubString(ListItem.MPAA,15) | SubString(Container(100).ListItem.Property(MPAA),15)">uk/15</value>
        <value condition="SubString(ListItem.MPAA,R18) | SubString(Container(100).ListItem.Property(MPAA),R18)">uk/r18</value>
        <value condition="SubString(ListItem.MPAA,18) | SubString(Container(100).ListItem.Property(MPAA),18)">uk/18</value>
        <value condition="SubString(ListItem.MPAA,UC) | SubString(Container(100).ListItem.Property(MPAA),UC)">uk/uc</value>
        <value condition="SubString(ListItem.MPAA,U) | SubString(Container(100).ListItem.Property(MPAA),U)">uk/u</value>
    </variable>
    <variable name="MovieMPAAVar_US">
        <value condition="SubString(ListItem.MPAA,PG-13) | SubString(Container(100).ListItem.Property(MPAA),PG-13)">us/pg-13</value>
        <value condition="SubString(ListItem.MPAA,PG) | SubString(ListItem.MPAA,Approved) | SubString(Container(100).ListItem.Property(MPAA),PG) | SubString(Container(100).ListItem.Property(MPAA),Approved)">us/pg</value>
        <value condition="SubString(ListItem.MPAA,G) | SubString(Container(100).ListItem.Property(MPAA),G)">us/g</value>
        <value condition="StringCompare(ListItem.MPAA,R) | SubString(ListItem.MPAA,Rated R) | SubString(ListItem.MPAA,USA:R) | StringCompare(Container(100).ListItem.Property(MPAA),R) | SubString(Container(100).ListItem.Property(MPAA),Rated R) | SubString(Container(100).ListItem.Property(MPAA),USA:R)">us/r</value>
        <value condition="SubString(ListItem.MPAA,17) | SubString(Container(100).ListItem.Property(MPAA),17)">us/nc-17</value>
        <value>us/nr</value>
    </variable>
    
	<!-- Animations -->
	<include name="Common-View-Animation">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" delay="100" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" delay="100"  time="350" tween="cubic" easing="inout" center="960,540"/>
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" delay="100" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" delay="100" time="350" tween="cubic" easing="inout" center="960,540"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" time="250" tween="cubic" easing="inout" center="960,540"/>
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" time="250" tween="cubic" easing="inout" center="960,540"/>
		</animation>
	</include>
</includes>